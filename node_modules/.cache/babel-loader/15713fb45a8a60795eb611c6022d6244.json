{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/HangmanCanvas.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nconst RED_COLOR = 'rgb(200, 0, 0)';\nconst WHITE_COLOR = 'rgb(0, 0, 0)';\nconst HANGMAN_STEPS = [ctx => {\n  ctx.moveTo(5, 240);\n  ctx.lineTo(70, 240);\n}, ctx => {\n  ctx.moveTo(25, 240);\n  ctx.lineTo(25, 20);\n}, ctx => {\n  ctx.moveTo(24, 20);\n  ctx.lineTo(105, 20);\n}, ctx => {\n  ctx.moveTo(25, 40);\n  ctx.lineTo(45, 20);\n}, ctx => {\n  ctx.moveTo(105, 19);\n  ctx.lineTo(105, 45);\n}, ctx => {\n  // Head\n  ctx.moveTo(117, 57);\n  ctx.fillStyle = WHITE_COLOR;\n  ctx.arc(105, 57, 12, 0, 3 * Math.PI * 2, false);\n}, ctx => {\n  // Body\n  ctx.moveTo(105, 69);\n  ctx.lineTo(105, 130);\n}, ctx => {\n  // Left leg\n  ctx.moveTo(105, 130);\n  ctx.lineTo(80, 180);\n}, ctx => {\n  // Right leg\n  ctx.moveTo(105, 130);\n  ctx.lineTo(125, 180);\n}, ctx => {\n  // Left arm\n  ctx.moveTo(105, 85);\n  ctx.lineTo(85, 115);\n}, ctx => {\n  // Right arm\n  ctx.moveTo(105, 85);\n  ctx.lineTo(125, 115);\n}];\n\nclass HangmanCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentDidMount() {\n    this.resetCanvas();\n  }\n\n  shouldComponentUpdate({\n    numberOfErrors\n  }) {\n    if (numberOfErrors === 0) {\n      this.resetCanvas();\n    }\n\n    return this.props.numberOfErrors !== numberOfErrors;\n  }\n\n  resetCanvas() {\n    const canvas = this.canvas.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, 150, 250);\n    ctx.strokeRect(0, 0, 150, 250);\n    this.drawHangmanSteps(0, this.props.maxErrorsAuthorized - 1, ctx);\n  }\n\n  drawHangmanSteps(startStepIndex, endStepIndex, ctx) {\n    console.log(`drawHangmanSteps ${startStepIndex} ${endStepIndex}`);\n    ctx.beginPath();\n    HANGMAN_STEPS.slice(startStepIndex, endStepIndex).forEach(step => step(ctx));\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  componentDidUpdate({\n    maxErrorsAuthorized\n  }) {\n    const canvas = this.canvas.current;\n    const ctx = canvas.getContext(\"2d\");\n    const newNumberOfErrors = this.props.numberOfErrors;\n    const startStepIndex = HANGMAN_STEPS.length - maxErrorsAuthorized;\n    const endStepIndex = startStepIndex + newNumberOfErrors;\n\n    if (endStepIndex === HANGMAN_STEPS.length) {\n      ctx.fillStyle = RED_COLOR;\n      ctx.fillRect(1, 1, 149, 249);\n    }\n\n    this.drawHangmanSteps(0, endStepIndex, ctx);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvas,\n      height: 250,\n      width: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nHangmanCanvas.propTypes = {\n  numberOfErrors: PropTypes.number.isRequired,\n  maxErrorsAuthorized: PropTypes.number.isRequired\n};\nHangmanCanvas.defaultProps = {\n  numberOfErrors: 0\n};\nexport default HangmanCanvas;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/HangmanCanvas.js"],"names":["PropTypes","React","Component","RED_COLOR","WHITE_COLOR","HANGMAN_STEPS","ctx","moveTo","lineTo","fillStyle","arc","Math","PI","HangmanCanvas","constructor","props","canvas","createRef","componentDidMount","resetCanvas","shouldComponentUpdate","numberOfErrors","current","getContext","clearRect","strokeRect","drawHangmanSteps","maxErrorsAuthorized","startStepIndex","endStepIndex","console","log","beginPath","slice","forEach","step","closePath","stroke","componentDidUpdate","newNumberOfErrors","length","fillRect","render","propTypes","number","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nconst RED_COLOR = 'rgb(200, 0, 0)'\nconst WHITE_COLOR = 'rgb(0, 0, 0)'\nconst HANGMAN_STEPS = [\n    (ctx) => {\n        ctx.moveTo(5, 240)\n        ctx.lineTo(70, 240)\n    },\n    (ctx) => {\n        ctx.moveTo(25, 240)\n        ctx.lineTo(25, 20)\n    },\n    (ctx) => {\n        ctx.moveTo(24, 20)\n        ctx.lineTo(105, 20)\n    },\n    (ctx) => {\n        ctx.moveTo(25, 40)\n        ctx.lineTo(45, 20)\n    },\n    (ctx) => {\n        ctx.moveTo(105, 19)\n        ctx.lineTo(105, 45)\n    },\n    (ctx) => {\n        // Head\n        ctx.moveTo(117, 57)\n        ctx.fillStyle = WHITE_COLOR\n        ctx.arc(105, 57, 12, 0, 3*Math.PI * 2, false)\n    },\n    (ctx) => {\n        // Body\n        ctx.moveTo(105, 69)\n        ctx.lineTo(105, 130)\n    },\n    (ctx) => {\n        // Left leg\n        ctx.moveTo(105, 130)\n        ctx.lineTo(80, 180)\n    },\n    (ctx) => {\n        // Right leg\n        ctx.moveTo(105, 130)\n        ctx.lineTo(125, 180)\n    },\n    (ctx) => {\n        // Left arm\n        ctx.moveTo(105, 85)\n        ctx.lineTo(85, 115)\n    },\n    (ctx) => {\n        // Right arm\n        ctx.moveTo(105, 85)\n        ctx.lineTo(125, 115)\n    }\n]\n\nclass HangmanCanvas extends Component {\n\n    constructor(props) {\n        super(props)\n        this.canvas = React.createRef()\n    }\n\n    componentDidMount() {\n        this.resetCanvas()\n    }\n\n    shouldComponentUpdate({ numberOfErrors }) {\n        if (numberOfErrors === 0) {\n            this.resetCanvas()\n        }\n        return this.props.numberOfErrors !== numberOfErrors\n    }\n\n    resetCanvas() {\n        const canvas = this.canvas.current\n        const ctx = canvas.getContext(\"2d\")\n\n        ctx.clearRect(0, 0, 150, 250)\n        ctx.strokeRect(0, 0, 150, 250)\n        this.drawHangmanSteps(0, this.props.maxErrorsAuthorized - 1, ctx)\n    }\n\n    drawHangmanSteps(startStepIndex, endStepIndex, ctx) {\n        console.log(`drawHangmanSteps ${startStepIndex} ${endStepIndex}`)\n        ctx.beginPath()\n        HANGMAN_STEPS.slice(startStepIndex, endStepIndex).forEach(step => step(ctx))\n        ctx.closePath()\n        ctx.stroke()\n    }\n\n    componentDidUpdate({ maxErrorsAuthorized }) {\n        const canvas = this.canvas.current\n        const ctx = canvas.getContext(\"2d\")\n        const newNumberOfErrors = this.props.numberOfErrors\n        const startStepIndex = HANGMAN_STEPS.length - maxErrorsAuthorized\n        const endStepIndex = startStepIndex + newNumberOfErrors\n\n        if (endStepIndex === HANGMAN_STEPS.length) {\n            ctx.fillStyle = RED_COLOR\n            ctx.fillRect(1, 1, 149, 249)\n        }\n\n        this.drawHangmanSteps(0, endStepIndex, ctx)\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas ref={this.canvas} height={250} width={150} />\n            </div>\n        )\n    }\n}\n\nHangmanCanvas.propTypes = {\n    numberOfErrors: PropTypes.number.isRequired,\n    maxErrorsAuthorized: PropTypes.number.isRequired,\n}\n\nHangmanCanvas.defaultProps = {\n    numberOfErrors: 0,\n}\n\nexport default HangmanCanvas"]},"metadata":{},"sourceType":"module"}