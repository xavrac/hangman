{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/App.js\";\nimport React, { Component } from 'react';\nimport Keyboard from './Keyboard.js';\nimport Riddle from './Riddle.js';\nimport './App.css';\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('');\nconst wordToGuess = 'COMPUTER';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      attemptedKeys: [],\n      foundKeyIndexes: []\n    };\n\n    this.clickKey = key => {\n      console.log('clicked', key);\n    };\n  }\n\n  getStatus(key) {\n    const {\n      attemptedKeys\n    } = this.state;\n\n    if (attemptedKeys.includes(key)) {\n      return \"clicked\";\n    }\n\n    return \"unclicked\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pendu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Riddle, {\n      word: wordToGuess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Keyboard, {\n      keys: LETTERS,\n      onClick: this.clickKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/App.js"],"names":["React","Component","Keyboard","Riddle","LETTERS","split","wordToGuess","App","state","attemptedKeys","foundKeyIndexes","clickKey","key","console","log","getStatus","includes","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,6BAA6BC,KAA7B,CAAmC,EAAnC,CAAhB;AACA,MAAMC,WAAW,GAAG,UAApB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,eAAe,EAAE;AAFX,KAFkB;;AAAA,SAQ1BC,QAR0B,GAQdC,GAAD,IAAS;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD,KAVyB;AAAA;;AAY1BG,EAAAA,SAAS,CAACH,GAAD,EAAM;AACb,UAAM;AAAEH,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;;AACA,QAAIC,aAAa,CAACO,QAAd,CAAuBJ,GAAvB,CAAJ,EAAiC;AAC/B,aAAO,SAAP;AACD;;AACD,WAAO,WAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEX,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,OAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKO,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMH;;AA3B2B;;AA8B5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Keyboard from './Keyboard.js'\nimport Riddle from './Riddle.js'\nimport './App.css'\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('')\nconst wordToGuess = 'COMPUTER'\n\nclass App extends Component {\n\n  state = {\n    attemptedKeys: [],\n    foundKeyIndexes: [],\n  }\n\n  // Putting an arrow function to bind this here...\n  clickKey = (key) => {\n    console.log('clicked', key)\n  }\n\n  getStatus(key) {\n    const { attemptedKeys } = this.state\n    if (attemptedKeys.includes(key)) {\n      return \"clicked\"\n    }\n    return \"unclicked\"\n  }\n  \n  render() {\n    return (\n      <div className=\"pendu\">\n        <Riddle word={wordToGuess} />\n        <Keyboard keys={LETTERS} onClick={this.clickKey} />\n      </div>\n  )\n}\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}