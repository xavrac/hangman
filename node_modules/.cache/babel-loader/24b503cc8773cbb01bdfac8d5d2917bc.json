{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/HangmanCanvas.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nconst RED_COLOR = 'rgb(200, 0, 0)';\nconst HANGMAN_STEPS = [ctx => {\n  ctx.moveTo(10, 90);\n  ctx.lineTo(40, 90);\n}, ctx => {\n  ctx.moveTo(25, 90);\n  ctx.lineTo(25, 20);\n}, ctx => {\n  ctx.moveTo(24, 20);\n  ctx.lineTo(70, 20);\n}, ctx => {\n  ctx.moveTo(25, 35);\n  ctx.lineTo(40, 20);\n}, ctx => {\n  ctx.moveTo(70, 19);\n  ctx.lineTo(70, 35);\n}, ctx => {\n  // Head\n  ctx.moveTo(75, 35);\n  ctx.arc(70, 40, 5, 0, Math.PI * 2, true);\n}, ctx => {\n  // Body\n  ctx.moveTo(70, 45);\n  ctx.lineTo(70, 63);\n}, ctx => {\n  // Left leg\n  ctx.moveTo(70, 63);\n  ctx.lineTo(63, 78);\n}, ctx => {\n  // Right leg\n  ctx.moveTo(70, 63);\n  ctx.lineTo(77, 78);\n}, ctx => {\n  // Left arm\n  ctx.moveTo(70, 55);\n  ctx.lineTo(60, 50);\n}, ctx => {\n  // Right arm\n  ctx.moveTo(70, 55);\n  ctx.lineTo(80, 50);\n}];\n\nclass HangmanCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentDidMount() {\n    const canvas = this.canvas.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeRect(0, 0, 100, 100);\n  }\n\n  shouldComponentUpdate({\n    numberOfErrors\n  }) {\n    console.log(`props => ${this.props.numberOfErrors}`);\n    console.log(`param => ${numberOfErrors}`);\n  }\n\n  componentDidUpdate({\n    numberOfErrors\n  }) {\n    console.log('componentDidUpdate');\n\n    if (this.props.numberOfErrors === numberOfErrors) {\n      return;\n    }\n\n    const canvas = this.canvas.current;\n    const ctx = canvas.getContext(\"2d\");\n    const newNumberOfErrors = this.props.numberOfErrors;\n\n    if (newNumberOfErrors === HANGMAN_STEPS.length) {\n      ctx.fillStyle = RED_COLOR;\n      ctx.fillRect(1, 1, 99, 99);\n    }\n\n    ctx.beginPath();\n    HANGMAN_STEPS.slice(0, newNumberOfErrors).forEach(step => step(ctx));\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvas,\n      height: 100,\n      width: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nHangmanCanvas.propTypes = {\n  numberOfErrors: PropTypes.number.isRequired\n};\nHangmanCanvas.defaultProps = {\n  numberOfErrors: 0\n};\nexport default HangmanCanvas;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/HangmanCanvas.js"],"names":["PropTypes","React","Component","RED_COLOR","HANGMAN_STEPS","ctx","moveTo","lineTo","arc","Math","PI","HangmanCanvas","constructor","props","canvas","createRef","componentDidMount","current","getContext","strokeRect","shouldComponentUpdate","numberOfErrors","console","log","componentDidUpdate","newNumberOfErrors","length","fillStyle","fillRect","beginPath","slice","forEach","step","closePath","stroke","render","propTypes","number","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nconst RED_COLOR = 'rgb(200, 0, 0)'\nconst HANGMAN_STEPS = [\n    (ctx) => {\n        ctx.moveTo(10, 90)\n        ctx.lineTo(40, 90)\n    },\n    (ctx) => {\n        ctx.moveTo(25, 90)\n        ctx.lineTo(25, 20)\n    },\n    (ctx) => {\n        ctx.moveTo(24, 20)\n        ctx.lineTo(70, 20)\n    },\n    (ctx) => {\n        ctx.moveTo(25, 35)\n        ctx.lineTo(40, 20)\n    },\n    (ctx) => {\n        ctx.moveTo(70, 19)\n        ctx.lineTo(70, 35)\n    },\n    (ctx) => {\n        // Head\n        ctx.moveTo(75, 35)\n        ctx.arc(70, 40, 5, 0, Math.PI * 2, true)\n    },\n    (ctx) => {\n        // Body\n        ctx.moveTo(70, 45)\n        ctx.lineTo(70, 63)\n    },\n    (ctx) => {\n        // Left leg\n        ctx.moveTo(70, 63)\n        ctx.lineTo(63, 78)\n    },\n    (ctx) => {\n        // Right leg\n        ctx.moveTo(70, 63)\n        ctx.lineTo(77, 78)\n    },\n    (ctx) => {\n        // Left arm\n        ctx.moveTo(70, 55)\n        ctx.lineTo(60, 50)\n    },\n    (ctx) => {\n        // Right arm\n        ctx.moveTo(70, 55)\n        ctx.lineTo(80, 50)\n    }\n]\n\nclass HangmanCanvas extends Component {\n\n    constructor(props) {\n        super(props)\n        this.canvas = React.createRef()\n    }\n\n    componentDidMount() {\n        const canvas = this.canvas.current\n        const ctx = canvas.getContext(\"2d\")\n\n        ctx.strokeRect(0, 0, 100, 100)\n    }\n\n    shouldComponentUpdate({ numberOfErrors }) {\n        console.log(`props => ${this.props.numberOfErrors}`)\n        console.log(`param => ${numberOfErrors}`)\n    }\n\n    componentDidUpdate({ numberOfErrors }) {\n        console.log('componentDidUpdate')\n        if (this.props.numberOfErrors === numberOfErrors) {\n            return\n        }\n\n        const canvas = this.canvas.current\n        const ctx = canvas.getContext(\"2d\")\n        const newNumberOfErrors = this.props.numberOfErrors\n\n        if (newNumberOfErrors === HANGMAN_STEPS.length) {\n            ctx.fillStyle = RED_COLOR\n            ctx.fillRect(1, 1, 99, 99)\n        }\n        ctx.beginPath()\n        HANGMAN_STEPS.slice(0, newNumberOfErrors).forEach(step => step(ctx))\n        ctx.closePath()\n        ctx.stroke()\n    }\n\n    render() {\n        return (\n            <div>\n                <canvas ref={this.canvas} height={100} width={100} />\n            </div>\n        )\n    }\n\n}\n\nHangmanCanvas.propTypes = {\n    numberOfErrors: PropTypes.number.isRequired,\n}\n\nHangmanCanvas.defaultProps = {\n    numberOfErrors: 0,\n}\n\nexport default HangmanCanvas"]},"metadata":{},"sourceType":"module"}