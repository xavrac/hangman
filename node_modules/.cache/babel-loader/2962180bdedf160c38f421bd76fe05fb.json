{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/Keyboard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Keyboard.css';\n\nconst Keyboard = ({\n  keys,\n  onClick,\n  status,\n  gameStatus,\n  reset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"keyboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, ['won', 'lost'].includes(gameStatus) ? /*#__PURE__*/React.createElement(\"div\", {\n  className: `reset ${gameStatus}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }\n}, \"You \", gameStatus, \" \\uD83D\\uDE24 !!!\"), /*#__PURE__*/React.createElement(\"button\", {\n  className: \"button\",\n  onClick: () => reset(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }\n}, \"RESET\")) : keys.map(key => /*#__PURE__*/React.createElement(\"span\", {\n  className: `key ${status(key)}`,\n  key: key,\n  onClick: () => onClick(key),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }\n}, key)));\n\nKeyboard.propTypes = {\n  keys: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.func.isRequired,\n  gameStatus: PropTypes.string.isRequired,\n  reset: PropTypes.func.isRequired\n};\nKeyboard.defaultProps = {\n  gameStatus: 'playing'\n};\nexport default Keyboard;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/Keyboard.js"],"names":["React","PropTypes","Keyboard","keys","onClick","status","gameStatus","reset","includes","map","key","propTypes","arrayOf","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,kBACb;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAES,CAAC,KAAD,EAAQ,MAAR,EAAgBC,QAAhB,CAAyBF,UAAzB,CAAD,gBACI;AAAK,EAAA,SAAS,EAAG,SAAQA,UAAW,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWA,UAAX,sBADJ,eAEI;AAAQ,EAAA,SAAS,EAAC,QAAlB;AAA2B,EAAA,OAAO,EAAE,MAAMC,KAAK,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,GAMAJ,IAAI,CAACM,GAAL,CAAWC,GAAD,iBACN;AAAM,EAAA,SAAS,EAAG,OAAML,MAAM,CAACK,GAAD,CAAM,EAApC;AAAuC,EAAA,GAAG,EAAEA,GAA5C;AAAiD,EAAA,OAAO,EAAE,MAAMN,OAAO,CAACM,GAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+EA,GAA/E,CADJ,CARR,CADJ;;AAgBAR,QAAQ,CAACS,SAAT,GAAqB;AACjBR,EAAAA,IAAI,EAAEF,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,MAAV,CAAiBC,UAAnC,EAA+CA,UADpC;AAEjBV,EAAAA,OAAO,EAAEH,SAAS,CAACc,IAAV,CAAeD,UAFP;AAGjBT,EAAAA,MAAM,EAAEJ,SAAS,CAACc,IAAV,CAAeD,UAHN;AAIjBR,EAAAA,UAAU,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UAJZ;AAKjBP,EAAAA,KAAK,EAAEN,SAAS,CAACc,IAAV,CAAeD;AALL,CAArB;AAQAZ,QAAQ,CAACc,YAAT,GAAwB;AACpBV,EAAAA,UAAU,EAAE;AADQ,CAAxB;AAIA,eAAeJ,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Keyboard.css'\n\nconst Keyboard = ({ keys, onClick, status, gameStatus, reset }) => (\n    <div className=\"keyboard\">\n        { \n            (['won', 'lost'].includes(gameStatus)) ? (\n                <div className={`reset ${gameStatus}`}>\n                    <span>You {gameStatus} ðŸ˜¤ !!!</span>\n                    <button className=\"button\" onClick={() => reset()}>RESET</button> \n                </div>\n            ) : \n            keys.map( (key) => (\n                <span className={`key ${status(key)}`} key={key} onClick={() => onClick(key)}>{key}</span>\n            ))\n        }\n    </div>\n)\n\nKeyboard.propTypes = {\n    keys: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    onClick: PropTypes.func.isRequired,\n    status: PropTypes.func.isRequired,\n    gameStatus: PropTypes.string.isRequired,\n    reset: PropTypes.func.isRequired,\n}\n\nKeyboard.defaultProps = {\n    gameStatus: 'playing'\n}\n\nexport default Keyboard"]},"metadata":{},"sourceType":"module"}