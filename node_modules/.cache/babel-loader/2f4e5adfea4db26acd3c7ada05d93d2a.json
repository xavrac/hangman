{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/App.js\";\nimport React, { Component } from 'react';\nimport Keyboard from './Keyboard.js';\nimport Riddle from './Riddle.js';\nimport './App.css';\nimport words from './resources/words_EN.js';\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.clickKey = key => {\n      const {\n        attemptedKeys\n      } = this.state;\n\n      if (!attemptedKeys.includes(key)) {\n        const newAttemptedKeys = [...attemptedKeys, key];\n        this.setState({\n          attemptedKeys: newAttemptedKeys\n        });\n      }\n    };\n\n    this.isRevealed = key => {\n      const {\n        attemptedKeys\n      } = this.state;\n      return attemptedKeys.includes(key);\n    };\n\n    this.getStatus = key => {\n      const {\n        attemptedKeys\n      } = this.state;\n\n      if (attemptedKeys.includes(key)) {\n        return \"clicked\";\n      }\n\n      return \"unclicked\";\n    };\n\n    this.resetGame = () => {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      this.setState({\n        attemptedKeys: [],\n        wordToGuess: words[randomIndex].split('')\n      });\n    };\n\n    this.resetGame();\n  } // Putting an arrow function to bind this here...\n\n\n  render() {\n    const {\n      wordToGuess,\n      attemptedKeys\n    } = this.state;\n    const won = wordToGuess.every(key => attemptedKeys.includes(key));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pendu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Riddle, {\n      word: wordToGuess,\n      isRevealed: this.isRevealed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Keyboard, {\n      keys: LETTERS,\n      onClick: this.clickKey,\n      status: this.getStatus,\n      won: won,\n      reset: this.resetGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/App.js"],"names":["React","Component","Keyboard","Riddle","words","LETTERS","split","App","constructor","clickKey","key","attemptedKeys","state","includes","newAttemptedKeys","setState","isRevealed","getStatus","resetGame","randomIndex","Math","floor","random","length","wordToGuess","render","won","every"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,OAAO,GAAG,6BAA6BC,KAA7B,CAAmC,EAAnC,CAAhB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAE1BO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAMdC,QANc,GAMFC,GAAD,IAAS;AAClB,YAAM;AAACC,QAAAA;AAAD,UAAkB,KAAKC,KAA7B;;AACA,UAAI,CAACD,aAAa,CAACE,QAAd,CAAuBH,GAAvB,CAAL,EAAkC;AAChC,cAAMI,gBAAgB,GAAG,CAAC,GAAGH,aAAJ,EAAmBD,GAAnB,CAAzB;AACA,aAAKK,QAAL,CAAe;AAACJ,UAAAA,aAAa,EAAEG;AAAhB,SAAf;AACD;AACF,KAZa;;AAAA,SAcdE,UAdc,GAcAN,GAAD,IAAS;AACpB,YAAM;AAACC,QAAAA;AAAD,UAAkB,KAAKC,KAA7B;AACA,aAAOD,aAAa,CAACE,QAAd,CAAuBH,GAAvB,CAAP;AACD,KAjBa;;AAAA,SAoBdO,SApBc,GAoBDP,GAAD,IAAS;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;;AACA,UAAID,aAAa,CAACE,QAAd,CAAuBH,GAAvB,CAAJ,EAAiC;AAC/B,eAAO,SAAP;AACD;;AACD,aAAO,WAAP;AACD,KA1Ba;;AAAA,SA4BdQ,SA5Bc,GA4BF,MAAM;AAChB,YAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBlB,KAAK,CAACmB,MAAjC,CAApB;AACA,WAAKR,QAAL,CAAc;AAACJ,QAAAA,aAAa,EAAE,EAAhB;AAAoBa,QAAAA,WAAW,EAAEpB,KAAK,CAACe,WAAD,CAAL,CAAmBb,KAAnB,CAAyB,EAAzB;AAAjC,OAAd;AACD,KA/Ba;;AAEZ,SAAKY,SAAL;AACD,GALyB,CAO1B;;;AA4BAO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,WAAF;AAAeb,MAAAA;AAAf,QAAiC,KAAKC,KAA5C;AACA,UAAMc,GAAG,GAAGF,WAAW,CAACG,KAAZ,CAAmBjB,GAAG,IAAIC,aAAa,CAACE,QAAd,CAAuBH,GAAvB,CAA1B,CAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEc,WAAd;AAA2B,MAAA,UAAU,EAAE,KAAKR,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEX,OAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKI,QAAvC;AAAiD,MAAA,MAAM,EAAE,KAAKQ,SAA9D;AAAyE,MAAA,GAAG,EAAES,GAA9E;AAAmF,MAAA,KAAK,EAAE,KAAKR,SAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5CyB;;AA+C5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Keyboard from './Keyboard.js'\nimport Riddle from './Riddle.js'\nimport './App.css'\nimport words from './resources/words_EN.js'\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('')\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.resetGame()\n  }\n\n  // Putting an arrow function to bind this here...\n  clickKey = (key) => {\n    const {attemptedKeys} = this.state\n    if (!attemptedKeys.includes(key)) {\n      const newAttemptedKeys = [...attemptedKeys, key]\n      this.setState( {attemptedKeys: newAttemptedKeys} )\n    }\n  }\n\n  isRevealed = (key) => {\n    const {attemptedKeys} = this.state\n    return attemptedKeys.includes(key)\n  }\n\n  // Putting an arrow function to bind this here...\n  getStatus = (key) => {\n    const { attemptedKeys } = this.state\n    if (attemptedKeys.includes(key)) {\n      return \"clicked\"\n    }\n    return \"unclicked\"\n  }\n\n  resetGame = () => {\n    const randomIndex = Math.floor(Math.random() * words.length)\n    this.setState({attemptedKeys: [], wordToGuess: words[randomIndex].split('')})\n  }\n  \n  render() {\n    const { wordToGuess, attemptedKeys } = this.state\n    const won = wordToGuess.every( key => attemptedKeys.includes(key))\n    return (\n      <div className=\"pendu\">\n        <Riddle word={wordToGuess} isRevealed={this.isRevealed} />\n        <Keyboard keys={LETTERS} onClick={this.clickKey} status={this.getStatus} won={won} reset={this.resetGame} />\n      </div>\n    )\n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}