{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/App.js\";\nimport React, { Component } from 'react';\nimport Keyboard from './Keyboard.js';\nimport Riddle from './Riddle.js';\nimport './App.css';\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('');\nconst DEFAULT_STATE = {\n  attemptedKeys: [],\n  wordToGuess: 'APPARTEMENT'.split('')\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = DEFAULT_STATE;\n\n    this.clickKey = key => {\n      const {\n        attemptedKeys\n      } = this.state;\n\n      if (!attemptedKeys.includes(key)) {\n        const newAttemptedKeys = [...attemptedKeys, key];\n        this.setState({\n          attemptedKeys: newAttemptedKeys\n        });\n      }\n    };\n\n    this.isRevealed = key => {\n      const {\n        attemptedKeys\n      } = this.state;\n      return attemptedKeys.includes(key);\n    };\n\n    this.getStatus = key => {\n      const {\n        attemptedKeys\n      } = this.state;\n\n      if (attemptedKeys.includes(key)) {\n        return \"clicked\";\n      }\n\n      return \"unclicked\";\n    };\n  }\n\n  render() {\n    const {\n      wordToGuess,\n      attemptedKeys\n    } = this.state;\n    const won = wordToGuess.every(key => attemptedKeys.includes(key));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pendu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Riddle, {\n      word: wordToGuess,\n      isRevealed: this.isRevealed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Keyboard, {\n      keys: LETTERS,\n      onClick: this.clickKey,\n      status: this.getStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), won && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }\n    }, \"GAGNE !\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/App.js"],"names":["React","Component","Keyboard","Riddle","LETTERS","split","DEFAULT_STATE","attemptedKeys","wordToGuess","App","state","clickKey","key","includes","newAttemptedKeys","setState","isRevealed","getStatus","render","won","every"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,6BAA6BC,KAA7B,CAAmC,EAAnC,CAAhB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,aAAa,EAAE,EADK;AAEpBC,EAAAA,WAAW,EAAE,cAAcH,KAAd,CAAoB,EAApB;AAFO,CAAtB;;AAKA,MAAMI,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClBJ,aADkB;;AAAA,SAI1BK,QAJ0B,GAIdC,GAAD,IAAS;AAClB,YAAM;AAACL,QAAAA;AAAD,UAAkB,KAAKG,KAA7B;;AACA,UAAI,CAACH,aAAa,CAACM,QAAd,CAAuBD,GAAvB,CAAL,EAAkC;AAChC,cAAME,gBAAgB,GAAG,CAAC,GAAGP,aAAJ,EAAmBK,GAAnB,CAAzB;AACA,aAAKG,QAAL,CAAe;AAACR,UAAAA,aAAa,EAAEO;AAAhB,SAAf;AACD;AACF,KAVyB;;AAAA,SAY1BE,UAZ0B,GAYZJ,GAAD,IAAS;AACpB,YAAM;AAACL,QAAAA;AAAD,UAAkB,KAAKG,KAA7B;AACA,aAAOH,aAAa,CAACM,QAAd,CAAuBD,GAAvB,CAAP;AACD,KAfyB;;AAAA,SAkB1BK,SAlB0B,GAkBbL,GAAD,IAAS;AACnB,YAAM;AAAEL,QAAAA;AAAF,UAAoB,KAAKG,KAA/B;;AACA,UAAIH,aAAa,CAACM,QAAd,CAAuBD,GAAvB,CAAJ,EAAiC;AAC/B,eAAO,SAAP;AACD;;AACD,aAAO,WAAP;AACD,KAxByB;AAAA;;AA0B1BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,WAAF;AAAeD,MAAAA;AAAf,QAAiC,KAAKG,KAA5C;AACA,UAAMS,GAAG,GAAGX,WAAW,CAACY,KAAZ,CAAmBR,GAAG,IAAIL,aAAa,CAACM,QAAd,CAAuBD,GAAvB,CAA1B,CAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEJ,WAAd;AAA2B,MAAA,UAAU,EAAE,KAAKQ,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEZ,OAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKO,QAAvC;AAAiD,MAAA,MAAM,EAAE,KAAKM,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGIE,GAAG,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHX,CADF;AAOH;;AApC2B;;AAuC5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Keyboard from './Keyboard.js'\nimport Riddle from './Riddle.js'\nimport './App.css'\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('')\nconst DEFAULT_STATE = {\n  attemptedKeys: [],\n  wordToGuess: 'APPARTEMENT'.split(''),\n}\n\nclass App extends Component {\n  state = DEFAULT_STATE\n\n  // Putting an arrow function to bind this here...\n  clickKey = (key) => {\n    const {attemptedKeys} = this.state\n    if (!attemptedKeys.includes(key)) {\n      const newAttemptedKeys = [...attemptedKeys, key]\n      this.setState( {attemptedKeys: newAttemptedKeys} )\n    }\n  }\n\n  isRevealed = (key) => {\n    const {attemptedKeys} = this.state\n    return attemptedKeys.includes(key)\n  }\n\n  // Putting an arrow function to bind this here...\n  getStatus = (key) => {\n    const { attemptedKeys } = this.state\n    if (attemptedKeys.includes(key)) {\n      return \"clicked\"\n    }\n    return \"unclicked\"\n  }\n  \n  render() {\n    const { wordToGuess, attemptedKeys } = this.state\n    const won = wordToGuess.every( key => attemptedKeys.includes(key))\n    return (\n      <div className=\"pendu\">\n        <Riddle word={wordToGuess} isRevealed={this.isRevealed} />\n        <Keyboard keys={LETTERS} onClick={this.clickKey} status={this.getStatus} />\n        { won && <span>GAGNE !</span> }\n      </div>\n  )\n}\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}