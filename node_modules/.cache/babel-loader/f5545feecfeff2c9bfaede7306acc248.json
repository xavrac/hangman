{"ast":null,"code":"var _jsxFileName = \"/Users/xavrac/dev/react/pendu/src/Keyboard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Keyboard.css';\nconst STATUS = new Map(['won', 'ðŸ¤—'], ['lost', 'ðŸ˜¤']);\n\nconst Keyboard = ({\n  keys,\n  onClick,\n  status,\n  gameStatus,\n  reset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"keyboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, ['won', 'lost'].includes(gameStatus) ? /*#__PURE__*/React.createElement(\"div\", {\n  className: `reset ${gameStatus}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }\n}, STATUS.get(gameStatus), \" You \", gameStatus, \" !!!\"), /*#__PURE__*/React.createElement(\"button\", {\n  className: \"button\",\n  onClick: () => reset(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 21\n  }\n}, \"RESET\")) : keys.map(key => /*#__PURE__*/React.createElement(\"span\", {\n  className: `key ${status(key)}`,\n  key: key,\n  onClick: () => onClick(key),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }\n}, key)));\n\nKeyboard.propTypes = {\n  keys: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onClick: PropTypes.func.isRequired,\n  status: PropTypes.func.isRequired,\n  gameStatus: PropTypes.string.isRequired,\n  reset: PropTypes.func.isRequired\n};\nKeyboard.defaultProps = {\n  gameStatus: 'playing'\n};\nexport default Keyboard;","map":{"version":3,"sources":["/Users/xavrac/dev/react/pendu/src/Keyboard.js"],"names":["React","PropTypes","STATUS","Map","Keyboard","keys","onClick","status","gameStatus","reset","includes","get","map","key","propTypes","arrayOf","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AAEA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQ,CAAC,KAAD,EAAQ,IAAR,CAAR,EAAsB,CAAC,MAAD,EAAS,IAAT,CAAtB,CAAf;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,kBACb;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAES,CAAC,KAAD,EAAQ,MAAR,EAAgBC,QAAhB,CAAyBF,UAAzB,CAAD,gBACI;AAAK,EAAA,SAAS,EAAG,SAAQA,UAAW,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAON,MAAM,CAACS,GAAP,CAAWH,UAAX,CAAP,WAAoCA,UAApC,SADJ,eAEI;AAAQ,EAAA,SAAS,EAAC,QAAlB;AAA2B,EAAA,OAAO,EAAE,MAAMC,KAAK,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,GAMAJ,IAAI,CAACO,GAAL,CAAWC,GAAD,iBACN;AAAM,EAAA,SAAS,EAAG,OAAMN,MAAM,CAACM,GAAD,CAAM,EAApC;AAAuC,EAAA,GAAG,EAAEA,GAA5C;AAAiD,EAAA,OAAO,EAAE,MAAMP,OAAO,CAACO,GAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+EA,GAA/E,CADJ,CARR,CADJ;;AAgBAT,QAAQ,CAACU,SAAT,GAAqB;AACjBT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAAV,CAAiBC,UAAnC,EAA+CA,UADpC;AAEjBX,EAAAA,OAAO,EAAEL,SAAS,CAACiB,IAAV,CAAeD,UAFP;AAGjBV,EAAAA,MAAM,EAAEN,SAAS,CAACiB,IAAV,CAAeD,UAHN;AAIjBT,EAAAA,UAAU,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UAJZ;AAKjBR,EAAAA,KAAK,EAAER,SAAS,CAACiB,IAAV,CAAeD;AALL,CAArB;AAQAb,QAAQ,CAACe,YAAT,GAAwB;AACpBX,EAAAA,UAAU,EAAE;AADQ,CAAxB;AAIA,eAAeJ,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Keyboard.css'\n\nconst STATUS = new Map(['won', 'ðŸ¤—'],['lost', 'ðŸ˜¤'])\n\nconst Keyboard = ({ keys, onClick, status, gameStatus, reset }) => (\n    <div className=\"keyboard\">\n        { \n            (['won', 'lost'].includes(gameStatus)) ? (\n                <div className={`reset ${gameStatus}`}>\n                    <span>{STATUS.get(gameStatus)} You {gameStatus} !!!</span>\n                    <button className=\"button\" onClick={() => reset()}>RESET</button> \n                </div>\n            ) : \n            keys.map( (key) => (\n                <span className={`key ${status(key)}`} key={key} onClick={() => onClick(key)}>{key}</span>\n            ))\n        }\n    </div>\n)\n\nKeyboard.propTypes = {\n    keys: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    onClick: PropTypes.func.isRequired,\n    status: PropTypes.func.isRequired,\n    gameStatus: PropTypes.string.isRequired,\n    reset: PropTypes.func.isRequired,\n}\n\nKeyboard.defaultProps = {\n    gameStatus: 'playing'\n}\n\nexport default Keyboard"]},"metadata":{},"sourceType":"module"}